8086模式：段地址不能超过64k。
         不允许将数值直接送入段寄存器，可通过ax
         
cs：代码段寄存器，code segment 联合ip作为cpu指向当前正在执行的那条指令所使用
ds：数据段寄存器，data segment 
ss：堆栈段寄存器，stack segment 联合sp定义一个堆栈
es：附加段寄存器，extra segment 
bx：段地址的偏移地址
bp:只要在[...]中使用寄存器bp，段地址就默认在ss中，比如mov ax,[bp] 含义：(ax)=((ss)*16+(bp))
    [bx]默认代表ds：[bx]
si和di更能跟bx相似，不能分为两个8位寄存器来使用
    
编写测试程序：
         1.在dos下运行edit，保存为1.asm
         2。编译 masm c:\1;(省略了后缀名)
         3.连接 link 1;
         4.跟踪程序，debug 1.exe
                  一般情况下，程序加载后，ds:0~ff为PSP区域，(ds+10H):0为整个程序的入口
                  -r 查看各寄存器情况
                  -d -d 0b40:0 查看段地址中的数据
                  -u 查看指令
                  -t 逐条执行指令并查看结果
                  -p 遇到int 21，
                     遇到循环，如 loop 0012，可自动完成循环
                  -g -g 0012， 执行完cs：0012前的所有命令

p170
db定义字节类型变量，一个字节数据占1个字节单元，读完一个，偏移量加1
dw定义字类型变量，一个字数据占2个字节单元，读完一个，偏移量加2
dd定义双字类型变量，一个双字数据占4个字节单元，读完一个，偏移量加4

mov al 1111  ,and al 1101 将al的第一位设成0，用于将某一位改成0其他位不变
mov al 0000  ,or  al 0010 将al的第一位设为1，用于将某一位改成1其他位不变

[bx+idata] 常用的格式，mov ax,[200+bx], mov ax,200[bx], mov ax,[bx].200

一般来说，在需要暂存数据的时候，我们都应该使用栈

p169
一个结构化的数据包含了多个数据项，而数据项的类型又不相同，有字型，有字节型，有数组（字符串），我们可以用[bx+idata+si]方式
访问结构体中的数据，用bx定位整个结构体，用idata确定某一个数据项，用si定位数组项中的每个元素。书写方式如：[bx].idata,[bx].idata[si]
